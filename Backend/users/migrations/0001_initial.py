# Generated by Django 5.1.4 on 2025-01-13 21:36

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('isParking', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='driver', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('nombre', models.CharField(max_length=100)),
                ('apellido', models.CharField(max_length=100)),
                ('fecha_nacimiento', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Parking',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='parking', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('nombre', models.CharField(max_length=200)),
                ('calle', models.CharField(max_length=200)),
                ('numero', models.CharField(max_length=20)),
                ('ciudad', models.CharField(max_length=100)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('carCapacity', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('bikeCapacity', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('motoCapacity', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='Features',
            fields=[
                ('parking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='features', serialize=False, to='users.parking')),
                ('isCovered', models.BooleanField(default=False)),
                ('has24hSecurity', models.BooleanField(default=False)),
                ('hasCCTV', models.BooleanField(default=False)),
                ('hasValetService', models.BooleanField(default=False)),
                ('hasDisabledParking', models.BooleanField(default=False)),
                ('hasEVChargers', models.BooleanField(default=False)),
                ('hasAutoPayment', models.BooleanField(default=False)),
                ('hasCardAccess', models.BooleanField(default=False)),
                ('hasCarWash', models.BooleanField(default=False)),
                ('hasRestrooms', models.BooleanField(default=False)),
                ('hasBreakdownAssistance', models.BooleanField(default=False)),
                ('hasFreeWiFi', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Prices',
            fields=[
                ('parking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='prices', serialize=False, to='users.parking')),
                ('auto_fraccion', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('auto_hora', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('auto_medio_dia', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('auto_dia_completo', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('camioneta_fraccion', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('camioneta_hora', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('camioneta_medio_dia', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('camioneta_dia_completo', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('moto_fraccion', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('moto_hora', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('moto_medio_dia', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('moto_dia_completo', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('bici_fraccion', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('bici_hora', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('bici_medio_dia', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('bici_dia_completo', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('parking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='schedule', serialize=False, to='users.parking')),
                ('lunes_open', models.TimeField()),
                ('lunes_close', models.TimeField()),
                ('martes_open', models.TimeField()),
                ('martes_close', models.TimeField()),
                ('miercoles_open', models.TimeField()),
                ('miercoles_close', models.TimeField()),
                ('jueves_open', models.TimeField()),
                ('jueves_close', models.TimeField()),
                ('viernes_open', models.TimeField()),
                ('viernes_close', models.TimeField()),
                ('sabado_open', models.TimeField()),
                ('sabado_close', models.TimeField()),
                ('domingo_open', models.TimeField()),
                ('domingo_close', models.TimeField()),
                ('feriados_open', models.TimeField()),
                ('feriados_close', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('isClosed', models.BooleanField(default=False)),
                ('security', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('cleanliness', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('lighting', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('accessibility', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('service', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True, null=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='users.driver')),
                ('parking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='users.parking')),
            ],
            options={
                'unique_together': {('parking', 'driver')},
            },
        ),
    ]
